# -*- coding: utf-8 -*-
"""
/***************************************************************************
 ErcTvbPlugin
                                 A QGIS plugin
 ERC-TVB integrates ecological continuities in Avoid, Minimize, Mitigate sequence
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-08-25
        git sha              : $Format:%H$
        copyright            : (C) 2021 by INRAE
        email                : mathieu.chailloux@inrae.fr
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5.QtGui import QIcon
from qgis.core import QgsApplication, QgsProcessingProvider

from ..graphab4qgis.processing.CreateProject import CreateProject
from ..graphab4qgis.processing.CreateLinkset import CreateLinkset
from ..graphab4qgis.processing.CalculateCorridor import CalculateCorridor
from ..graphab4qgis.processing.CreateGraph import CreateGraph
from ..graphab4qgis.processing.CalculateLocalMetric import CalculateLocalMetric
from ..graphab4qgis.processing.CalculateGlobalMetric import CalculateGlobalMetric
from ..graphab4qgis.processing.GraphabProvider import GraphabProvider


class ErcTvbAlgorithmsProvider(GraphabProvider):

    def __init__(self,plugin):
        super().__init__(plugin.graphabPlugin)
        self.alglist = [
            CreateLinkset(self.plugin),
            CreateProject(self.plugin),
            CalculateCorridor(self.plugin),
            CreateGraph(self.plugin),
            CalculateLocalMetric(self.plugin),
            CalculateGlobalMetric(self.plugin)]
        # for a in self.alglist:
            # self.addAlgorithm(a)
        
    def unload(self):
        pass
        
    def id(self):
        return "erc_tvb"
        
    def name(self):
        return "ERC-TVB"
        
    def longName(self):
        return self.name()
        
    def icon(self):
        icon_path = os.path.join(os.path.dirname(__file__), "..", "icons", "icon.png")
        #icon_path = ':/plugins/FragScape/icons/icon.svg'
        # print("icon_path = " + str(icon_path))
        return QIcon(icon_path)
        
    def loadAlgorithms(self):
        for a in self.alglist:
            self.addAlgorithm(a)